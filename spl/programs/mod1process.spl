alias fnum R1;
alias pid R2;

if (fnum==1) //get pcb entry
 then
 alias i R3;
 i=0;
 while(i<16) do
 if([PROCESS_TABLE+i*16+4]==TERMINATED) then
  [PROCESS_TABLE+i*16+1]=i;
  [PROCESS_TABLE+i*16 +4]=ALLOCATED;
  [PROCESS_TABLE+i*16+14]=PAGE_TABLE_BASE+i*20;
  [PROCESS_TABLE+i*16+15]=10;
  R0=i;
  return;
 endif;
 i=i+1;
 endwhile;
 R0=-1;
 return;
endif;

if (fnum==2) //free user area page
 then
  R3=0;
  while(R3<8) do
   if ([[PROCESS_TABLE+pid*16+11]*512+512-16+2*R3]==1) then
     multipush(R1,R2,R3);
     R4=R2;
     R1=7;
     R2=R3;
     R3=R4;
     call MOD_0;
     multipop(R1,R2,R3);
   endif;
   if ([[PROCESS_TABLE+pid*16+11]*512+512-16+2*R3]==FILE) then
     multipush(R1,R2,R3);
     R1=4;
     R2=[[PROCESS_TABLE+pid*16+11]*512+512-16+2*R3+1]
     call MOD_0;
     multipop(R1,R2,R3);
   endif;
   R3=R3+1;
  endwhile;
    
  multipush(R1,R2);
  R1=2;
  R2=[PROCESS_TABLE+pid*16+11];
  call MOD_2;  //calling release page
  multipop(R1,R2);
  return;
 endif;
 
if(fnum==3) //exit process 
 then

  multipush(R1,R2);
  R1=4; //pid already in R2
  call MOD_1; //calling free page table
  multipop(R1,R2);

  multipush(R1,R2);
  R1=2;
  call MOD_1; //calling free user area page
  multipop(R1,R2);

  [PROCESS_TABLE+pid*16+4]=TERMINATED;
  
  if ([PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]!=9) then
   R3=1;
   while(R3<16) do
    if ([PROCESS_TABLE+R3*16+4]==WAIT_PROCESS && [PROCESS_TABLE+R3*16+5]==[SYSTEM_STATUS_TABLE+1]) then
   [PROCESS_TABLE+R3*16+4]=READY;
  
   endif;
   if([PROCESS_TABLE+R3*16+2]==[SYSTEM_STATUS_TABLE+1]) then
   [PROCESS_TABLE+R3*16+2]=-1;
   endif;
   R3=R3+1;
  endwhile;
  endif;
  
  return;
 endif;


if(fnum==4) then//free page table
 alias pgtable R3;
 pgtable=PAGE_TABLE_BASE+pid*20;
 [pgtable]=-1;
 [pgtable+1]="0000";
 [pgtable+2]=-1;
 [pgtable+3]="0000";
 alias i R4;
 i=4;
 while(i<20) do
 if([pgtable+i]!=-1) then
   multipush(R1,R2,R3,R4);
   R1=2;
   R2=[pgtable+i];
   call MOD_2;  //calling release page
   multipop(R1,R2,R3,R4);
   [pgtable+i+1]="0000";
  endif;
 i=i+2;
 endwhile;
i=1;
 while(i<10) do
 if ([DISK_MAP_TABLE+pid*10+i]!=-1 && (i<4 || i>7)) then
   multipush(R0,R1,R2,R3,R4,R5);
   R1=4;
   R3=pid;
   R2= [DISK_MAP_TABLE+pid*10+i];
   call MOD_2;
   multipop(R0,R1,R2,R3,R4,R5);
 endif;
 [DISK_MAP_TABLE+pid*10+i]=-1;
 i=i+1;
 endwhile;
 return;
 endif;

return;

  
  
