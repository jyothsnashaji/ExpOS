

alias current_pid R0;
current_pid=[SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE+current_pid*16+9]=7;

alias usersp R1;
usersp=SP;

alias filedescriptor R2;
filedescriptor=[[PTBR+2*(usersp-4)/512]*512+(usersp-4)%512];

alias retaddress R3;
retaddress=[PTBR+2*(usersp-1)/512]*512+(usersp-1)%512;

alias wordaddress R4;
wordaddress=[[PTBR+2*(usersp-3)/512]*512+(usersp-3)%512];













if(filedescriptor<0 || filedescriptor>7) then
 [retaddress]=-1;
 SP=usersp;
 [PROCESS_TABLE+current_pid*16+9]=0;
 ireturn;
endif;

if ([[PROCESS_TABLE+current_pid*16+11]*512+RESOURCE_TABLE_OFFSET+2*filedescriptor]!=FILE) then
 [retaddress]=-1;
 SP=usersp;
 [PROCESS_TABLE+current_pid*16+9]=0;
 ireturn;
endif;

R4=[[PROCESS_TABLE+current_pid*16+11]*512+RESOURCE_TABLE_OFFSET+2*filedescriptor+1];
alias inode R5;
inode=[OPEN_FILE_TABLE+R4*4];

multipush(R0,R1,R2,R3,R4,R5);
R1=4;
R2=inode;
R3=[SYSTEM_STATUS_TABLE+1];
call MOD_0;
if(R0==-1) then
 [retaddress]=-1;
 SP=usersp;
 [PROCESS_TABLE+current_pid*16+9]=0;
 ireturn;
endif;
multipop(R0,R1,R2,R3,R4,R5);

alias lseek R6;
lseek=[OPEN_FILE_TABLE+R4*4+1];

if(inode==0) then
 if(lseek==480) then
  multipush(R0,R1,R2,R3,R4,R5);
  R1=5;
  R2=inode;
  R3=[SYSTEM_STATUS_TABLE+1];
  call MOD_0;
  multipop(R0,R1,R2,R3,R4,R5);
  [retaddress]=-2;
  SP=usersp;
  [PROCESS_TABLE+current_pid*16+9]=0;
  ireturn;
 endif;
 [wordaddress]=[ROOT_FILE+lseek];
 [OPEN_FILE_TABLE+R4*4+1]=[OPEN_FILE_TABLE+R4*4+1]+1;
else
 if(lseek==[INODE_TABLE+inode*16+2]) then
  multipush(R0,R1,R2,R3,R4,R5);
  R1=5;
  R2=inode;
  R3=[SYSTEM_STATUS_TABLE+1];
  call MOD_0;
  multipop(R0,R1,R2,R3,R4,R5);
  [retaddress]=-2;
  SP=usersp;
  [PROCESS_TABLE+current_pid*16+9]=0;
  ireturn;
 endif;
 
 multipush(R0,R1,R2,R3,R4,R5,R6);
 R1=2;
 R2=[INODE_TABLE+inode*16+8+lseek/512];//disk block number
 R3=lseek%512;//offset
 R4=wordaddress;//memory address
 multipop(R0,R1,R2,R3,R4,R5,R6);
 
 [OPEN_FILE_TABLE+R4*4+1]=[OPEN_FILE_TABLE+R4*4+1]+1;
 
  multipush(R0,R1,R2,R3,R4,R5,R6);
  R1=5;
  R2=inode;
  R3=[SYSTEM_STATUS_TABLE+1];
  call MOD_0;
  multipop(R0,R1,R2,R3,R4,R5,R6);
 
endif; 



 

