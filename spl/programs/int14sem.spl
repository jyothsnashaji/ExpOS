alias callno R0;
callno=[[PTBR+2*(SP-5)/512]*512+(SP-5)%512];

alias usersp R1;
usersp=SP;

alias arg R2;
arg=[[PTBR+2*(SP-4)/512]*512+(SP-4)%512];

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

if(callno==19) then //semlock
 [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=19;
 if(arg<0 || arg>7 || [[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+RESOURCE_TABLE_OFFSET+arg]!=1) then
 [[PTBR+2*(usersp-1)/512]*512+(usersp-1)%512]=-1;
 else
  while([SEMAPHORE_TABLE+4*arg]!=-1) do
  [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_SEMAPHORE;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=arg;
 multipush(R0,R1,R2);
 call MOD_5;
 multipop(R0,R1,R2);
 endwhile;
 [SEMAPHORE_TABLE+4*arg]=[SYSTEM_STATUS_TABLE+1];
 
 breakpoint;//3
 endif;
endif;


if(callno==20) then //semunlock
 [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=20;
 
 if(arg<0 || arg>7 || [[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+RESOURCE_TABLE_OFFSET+arg]!=1) then
 
 [[PTBR+2*(usersp-1)/512]*512+(usersp-1)%512]=-1;
 
 else
  
  if([SEMAPHORE_TABLE+arg*4]!=-1) then
    if([SEMAPHORE_TABLE+arg*4]!=[SYSTEM_STATUS_TABLE+1]) then
     [[PTBR+2*(usersp-1)/512]*512+(usersp-1)%512]=-2;
    else
    
    [SEMAPHORE_TABLE+arg*4]=-1;
    R4=0;
    
    while(R4<16) do
     if([PROCESS_TABLE+R4*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+16*R4+5]==arg) then
      [PROCESS_TABLE+R4*16+4]=READY;
     endif;
     R4=R4+1;
    endwhile;
   
    [[PTBR+2*(usersp-1)/512]*512+(usersp-1)%512]=0;
   endif; 
 endif;
endif;
endif;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
